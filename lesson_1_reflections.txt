How did viewing a diff between two versions of a file help you see the bug that
was introduced?
 - This is particularly helpful to track regressions in your code, i.e. some
   functionality A that used to work correctly but has been accidentally modified
   when you have been trying to add a new functionality B.
 - As the number of code lines become greater or, worse, in case you application
   is divided over many files, finding a bug introduced unintentionally would
   require a lot of time and energy if done "manually".
 - Using a command such as "git diff" to compare the faulty version with a
   previous one you know it works points out any difference automatically.
 - As a developer, your energy is saved for much more important things.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?
 - 

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
Docs does?
 - 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?
 - 

How can you use the commands git log and git diff to view the history of files?
 - 

How might using version control make you more confident to make changes that
could break something?
 - 